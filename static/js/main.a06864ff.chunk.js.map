{"version":3,"sources":["components/Layout.tsx","components/Tabs.tsx","pages/TabsPage.tsx","App.tsx","index.tsx"],"names":["Layout","className","to","isActive","classNames","Tabs","tabs","tabId","useParams","selectedTab","find","tab","id","some","undefined","map","title","content","TabsPage","App","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"8OAGaA,EAAS,kBACpB,qCACE,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEC,GAAG,IACHD,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cAAe,CACrD,YAAaD,KAHjB,kBAQA,cAAC,IAAD,CACED,GAAG,QACHD,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cAAe,CACrD,YAAaD,KAHjB,yBAWN,qBAAKF,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,YCxBKI,EAAwB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC9BC,EAAUC,cAAVD,MACFE,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAU,KAE1D,OACE,mCACGD,EAAKO,MAAK,SAAAF,GAAG,OAAIA,EAAIC,KAAOL,WAAoBO,IAAVP,EAEnC,qCACE,oBAAIN,UAAU,QAAd,uBACA,qBAAKA,UAAU,gBAAf,SACE,6BACGK,EAAKS,KAAI,SAAAJ,GAAG,OACX,oBAEE,UAAQ,MACRV,UAAWG,IAAW,CACpB,YAAaO,EAAIC,KAAOL,IAJ5B,SAOE,cAAC,IAAD,CAAML,GAAE,gBAAWS,EAAIC,IAAvB,SACGD,EAAIK,SAPFL,EAAIC,WAajB,qBAAKX,UAAU,QAAQ,UAAQ,aAA/B,SACGQ,EACGA,EAAYQ,QACZ,2BAIR,oBAAIhB,UAAU,QAAd,0BCvCJK,EAAc,CAClB,CAAEM,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,gBAG7BC,EAAW,WACtB,OACE,mCACE,cAAC,EAAD,CAAMZ,KAAMA,OCFLa,EAAgB,kBAC3B,mCACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,oBAAIpB,UAAU,QAAd,yBACtB,cAAC,IAAD,CAAOmB,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUnB,GAAG,QACzC,cAAC,IAAD,CAAOkB,KAAK,IAAIC,QAAS,oBAAIpB,UAAU,QAAd,4BAG3B,cAAC,IAAD,CAAOmB,KAAK,QAAQC,QAAS,cAAC,EAAD,IAA7B,SACE,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,cChBvCE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a06864ff.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink, Outlet } from 'react-router-dom';\n\nexport const Layout = () => (\n  <>\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames('navbar-item', {\n              'is-active': isActive,\n            })}\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to=\"/tabs\"\n            className={({ isActive }) => classNames('navbar-item', {\n              'is-active': isActive,\n            })}\n          >\n            Tabs\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n    <div className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </div>\n  </>\n);\n","import classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Tab } from '../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n};\n\nexport const Tabs: React.FC<Props> = ({ tabs }) => {\n  const { tabId } = useParams();\n  const selectedTab = tabs.find(tab => tab.id === tabId) || null;\n\n  return (\n    <>\n      {tabs.some(tab => tab.id === tabId) || tabId === undefined\n        ? (\n          <>\n            <h1 className=\"title\">Tabs page</h1>\n            <div className=\"tabs is-boxed\">\n              <ul>\n                {tabs.map(tab => (\n                  <li\n                    key={tab.id}\n                    data-cy=\"Tab\"\n                    className={classNames({\n                      'is-active': tab.id === tabId,\n                    })}\n                  >\n                    <Link to={`/tabs/${tab.id}`}>\n                      {tab.title}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <div className=\"block\" data-cy=\"TabContent\">\n              {selectedTab\n                ? selectedTab.content\n                : 'Please select a tab'}\n            </div>\n          </>\n        ) : (\n          <h1 className=\"title\">Not Found</h1>\n        )}\n    </>\n  );\n};\n","import { Tabs } from '../components/Tabs';\nimport { Tab } from '../types/Tab';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage = () => {\n  return (\n    <>\n      <Tabs tabs={tabs} />\n    </>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { Layout } from './components/Layout';\nimport { TabsPage } from './pages/TabsPage';\n\nexport const App: React.FC = () => (\n  <>\n    <Routes>\n      <Route path=\"/\" element={<Layout />}>\n        <Route index element={<h1 className=\"title\">Home page</h1>} />\n        <Route path=\"home\" element={<Navigate to=\"/\" />} />\n        <Route path=\"*\" element={<h1 className=\"title\">Not found</h1>} />\n      </Route>\n\n      <Route path=\"/tabs\" element={<Layout />}>\n        <Route path=\":tabId?\" element={<TabsPage />} />\n      </Route>\n    </Routes>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}